@page "/"
@inject IJSRuntime JS
@inject NavigationManager NavManager

<PageTitle>KK1400</PageTitle>
<div>
<center>
    <h1>KK1400</h1>

    @if (state == State.NotStarted)
    {
        <p>Hvor mange 14 taller er der?</p>
        <div>
            <label>
                <input type="radio" name="dif" checked="@(difficulty == 0)" onchange="@((ChangeEventArgs args) => difficulty = 0)" /> Normalt
            </label>
            <label>
                <input type="radio" name="dif" checked="@(difficulty == 1)" onchange="@((ChangeEventArgs args) => difficulty = 1)" /> Svært
            </label>
            <label>
                <input type="radio" name="dif" checked="@(difficulty == 2)" onchange="@((ChangeEventArgs args) => difficulty = 2)" /> Umuligt
            </label>
        </div>
        <br />
        <button class="btn btn-primary" @onclick="StartGameAsync">Start Spillet</button>
    }
    else if (state == State.Started)
    {
        <div class="container" style="width:300px; height:300px;">
            @for (int i = 0; i < grid; i++)
            {
                <div class="row" style="height:@(100.0/grid)%;">
                    @for (int j = 0; j < grid; j++)
                    {
                        <div class="col grid-item" style="width:@(100.0/grid)%;">@GetNumber()</div>
                    }
                </div>
            }
        </div>
    }
    else if (state == State.Answer)
    {
        <p>Hvor mange 14 taller var der? @(cheat ? count : "")</p>
        <input @bind="answer" />
        <br />
        <br />
        <button class="btn btn-primary" @onclick="Answer">Svar</button>
    }
    else if (state == State.Finished)
    {
        <p>Svaret var @count, du svarede @answer</p>
        @if (count != answer)
        {
            <p>Du er @CheckAnswer() fra</p>
            <h2 style="color: red;">DRIK</h2>
        }
        else
        {
            <h2 style="color: green;">TILLYKKE!</h2>
        }
        
        <button class="btn btn-primary" @onclick="OnInitializedAsync">Prøv Igen</button>
    }
</center>
</div>
<canvas id="canvas"></canvas>

@code {
    private State state;
    private int difficulty = 0;
    private int count;
    private int rounds;
    private int grid;
    private int answer;
    private bool cheat;

    protected override async Task OnInitializedAsync()
    {
        answer = 0;
        count = 0;
        rounds = 0;
        difficulty = 0;
        state = State.NotStarted;
        await JS.InvokeVoidAsync("displayNoConfetti");

        if (NavManager.TryGetQueryString("cheat", out bool _cheat)){
            cheat = _cheat;
        }
        else
        {
            cheat = false;
        }
    }

    private async Task StartGameAsync()
    {
        state = State.Started;
        count = 0;
        rounds = Random.Shared.Next(8) + 8;
        for (int i = 0; i < rounds; i++)
        {
            if (i == rounds - 2)
            {
                grid = 7;
            }
            else
            {
                grid = Random.Shared.Next(5) + 2;
            }

            StateHasChanged();
            if(difficulty == 1)
            {
                await Task.Delay(2750);
            }
            else if(difficulty == 2)
            {
                await Task.Delay(1500);
            }
            else
            {
                await Task.Delay(4000);
            }   
        }
        grid = 0;
        state = State.Answer;
    }

    private int GetNumber()
    {
        int number = Random.Shared.Next(9) + 10;
        if (number == 14)
        {
            count++;
        }
        return number;
    }

    private async Task Answer()
    {
        if(count == answer){
            await JS.InvokeVoidAsync("displayConfetti");
        }
        
        state = State.Finished;
    }

    private int CheckAnswer()
    {
        return Math.Abs(count - answer);
    }

    private enum State
    {
        NotStarted,
        Started,
        Answer,
        Finished
    }
}


